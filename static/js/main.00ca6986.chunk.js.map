{"version":3,"sources":["components/Axis.js","components/Bar.js","components/Tooltip.js","components/BarChart.js","data.js","App.js","serviceWorker.js","index.js"],"names":["Axis","axisRef","React","createRef","this","createAxis","_this$props","props","orientation","scale","d3","current","call","concat","_this$props2","xTransform","yTransform","className","label","react_default","a","createElement","ref","transform","Object","assign","labelPos","_this$props3","x","range","y","Component","Bar","width","height","otherProps","objectWithoutProperties","Tooltip","hovered","xScale","yScale","marginLeft","marginTop","country","bandwidth","women","formatWomenPercentage","styles","elections","lastElection","house","singleHouse","style","margin","BarChart","state","onBarHover","bar","_this","setState","_this2","data","domain","map","d","rangeRound","padding","nice","components_Bar","key","onMouseEnter","onMouseLeave","components_Axis","components_Tooltip","src_data","App","href","target","rel","components_BarChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00ca6986.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nclass Axis extends Component {\n  static propTypes = {\n    orientation: PropTypes.oneOf(['Top', 'Right', 'Bottom', 'Left']),\n    scale: PropTypes.func,\n    xTransform: PropTypes.number,\n    yTransform: PropTypes.number,\n    className: PropTypes.string,\n    label: PropTypes.string,\n  };\n\n  axisRef = React.createRef();\n\n  componentDidMount() {\n    this.createAxis();\n  }\n\n  get labelPos() {\n    const { orientation, scale } = this.props;\n\n    switch (orientation) {\n      case 'Bottom':\n        return { x: scale.range()[1] / 2, y: 100 };\n      case 'Left':\n        return { x: 10, y: -25 };\n      default:\n        return null;\n    }\n  }\n\n  createAxis() {\n    const { orientation, scale } = this.props;\n\n    d3.select(this.axisRef.current).call(d3[`axis${orientation}`](scale));\n  }\n\n  render() {\n    const {\n      xTransform, yTransform, className, label,\n    } = this.props;\n\n    return (\n      <g\n        ref={this.axisRef}\n        transform={`translate(${xTransform}, ${yTransform})`}\n        className={className}\n      >\n        <text {...this.labelPos} className=\"axisLabel\">{label}</text>\n      </g>\n    );\n  }\n}\n\nexport default Axis;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Bar = (props) => {\n  const {\n    x, y, width, height, ...otherProps\n  } = props;\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      {...otherProps}\n      className=\"rect\"\n    />\n  );\n};\n\nBar.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default Bar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst Tooltip = (props) => {\n  const {\n    hovered, xScale, yScale, marginLeft, marginTop,\n  } = props;\n\n  const x = xScale(hovered.country)\n      + xScale.bandwidth() / 2\n      + marginLeft;\n\n  const y = yScale(hovered.women)\n      + marginTop;\n\n  const formatWomenPercentage = d3.format('.1f');\n\n  const styles = {\n    transform: 'translate('\n    + `calc( -50% + ${x}px),`\n    + `calc(-100% + ${y}px)`\n    + ')',\n  };\n\n  const country = `${hovered.country}`;\n  const elections = `Elections held on ${hovered.lastElection}`;\n  const house = (hovered.singleHouse) ? 'house' : 'lower house';\n  const women = `Women in the ${house}: ${formatWomenPercentage(hovered.women)}%`;\n\n  return (\n    <div className=\"tooltip\" style={styles}>\n      <div className=\"tooltipCountry\">{country}</div>\n      <div>{elections}</div>\n      <div>{women}</div>\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  hovered: PropTypes.shape({\n    country: PropTypes.string,\n    lastElections: PropTypes.string,\n    women: PropTypes.number,\n    singleHouse: PropTypes.bool,\n  }),\n  xScale: PropTypes.func,\n  yScale: PropTypes.func,\n  marginLeft: PropTypes.number,\n  marginTop: PropTypes.number,\n};\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport Axis from './Axis';\nimport Bar from './Bar';\nimport Tooltip from './Tooltip';\n\nconst margin = {\n  top: 50, right: 10, bottom: 110, left: 100,\n};\nconst width = 900 - margin.left - margin.right;\nconst height = 400 - margin.top - margin.bottom;\n\nclass BarChart extends Component {\n  static propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n      country: PropTypes.string,\n      lastElections: PropTypes.string,\n      women: PropTypes.number,\n      singleHouse: PropTypes.bool,\n    })),\n  };\n\n  state = {\n    hovered: null,\n  };\n\n  onBarHover = bar => () => {\n    this.setState({ hovered: bar });\n  };\n\n  render() {\n    const { data } = this.props;\n\n    const { hovered } = this.state;\n\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map(d => d.country))\n      .rangeRound([0, width])\n      .padding(0.05);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.women)])\n      .rangeRound([height, 0])\n      .nice();\n\n    return (\n      <div className=\"chart\">\n        <svg\n          width={width + margin.left + margin.right}\n          height={height + margin.top + margin.bottom}\n        >\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {data.map(d => (\n              <Bar\n                key={d.country}\n                x={xScale(d.country)}\n                y={yScale(d.women)}\n                width={xScale.bandwidth()}\n                height={height - yScale(d.women)}\n                onMouseEnter={this.onBarHover(d)}\n                onMouseLeave={this.onBarHover(null)}\n              />\n            ))}\n            <Axis\n              orientation=\"Bottom\"\n              scale={xScale}\n              xTransform={0}\n              yTransform={height}\n              className=\"xAxis\"\n              label=\"\"\n            />\n            <Axis\n              orientation=\"Left\"\n              xTransform={0}\n              yTransform={0}\n              scale={yScale}\n              className=\"yAxis\"\n              label=\"seats (%)\"\n            />\n          </g>\n        </svg>\n        {hovered ? (\n          <Tooltip\n            hovered={hovered}\n            xScale={xScale}\n            yScale={yScale}\n            marginLeft={margin.left}\n            marginTop={margin.top}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n","export default [\n  {\n    country: 'Algeria',\n    lastElection: '04 May 2017',\n    women: 25.8,\n    singleHouse: false,\n  },\n  {\n    country: 'Bahrain',\n    lastElection: '01 December 2018',\n    women: 15.0,\n    singleHouse: false,\n  },\n  {\n    country: 'Egypt',\n    lastElection: '17 October 2015',\n    women: 14.9,\n    singleHouse: true,\n  },\n  {\n    country: 'Iraq',\n    lastElection: '12 May 2018',\n    women: 25.2,\n    singleHouse: true,\n  },\n  {\n    country: 'Israel',\n    lastElection: '17 March 2015',\n    women: 29.2,\n    singleHouse: true,\n  },\n  {\n    country: 'Jordan',\n    lastElection: '20 September 2016',\n    women: 15.4,\n    singleHouse: false,\n  },\n  {\n    country: 'Kuwait',\n    lastElection: '26 November 2016',\n    women: 4.6,\n    singleHouse: true,\n  },\n  {\n    country: 'Lebanon',\n    lastElection: '06 May 2018',\n    women: 4.7,\n    singleHouse: true,\n  },\n  {\n    country: 'Libya',\n    lastElection: '25 June 2014',\n    women: 16.0,\n    singleHouse: true,\n  },\n  {\n    country: 'Mauritania',\n    lastElection: '01 September 2018',\n    women: 20.3,\n    singleHouse: true,\n  },\n  {\n    country: 'Morocco',\n    lastElection: '07 October 2016',\n    women: 20.5,\n    singleHouse: false,\n  },\n  {\n    country: 'Oman',\n    lastElection: '25 October 2015',\n    women: 1.2,\n    singleHouse: false,\n  },\n  {\n    country: 'Qatar',\n    lastElection: '01 July 2013',\n    women: 9.8,\n    singleHouse: true,\n  },\n  {\n    country: 'Saudi Arabia',\n    lastElection: '02 December 2016',\n    women: 19.9,\n    singleHouse: true,\n  },\n  {\n    country: 'Sudan',\n    lastElection: '13 April 2015',\n    women: 27.7,\n    singleHouse: false,\n  },\n  {\n    country: 'Syria',\n    lastElection: '13 April 2016',\n    women: 13.2,\n    singleHouse: true,\n  },\n  {\n    country: 'Tunisia',\n    lastElection: '26 October 2014',\n    women: 35.9,\n    singleHouse: true,\n  },\n  {\n    country: 'United Arab Emirates',\n    lastElection: '03 October 2015',\n    women: 22.5,\n    singleHouse: true,\n  },\n  {\n    country: 'Yemen',\n    lastElection: '27 April 2003',\n    women: 0.3,\n    singleHouse: false,\n  },\n];\n","import React from 'react';\nimport BarChart from './components/BarChart';\nimport data from './data';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"intro\">\n      <h1>\n        {' '}\n        Proportion of seats held by women in lower or single houses of Middle Eastern and North African\n        parliaments\n      </h1>\n      <p>\n        {' '}\n          Data provided by national parliaments by 01 January 2019 and compiled by the\n        {' '}\n        <a\n          href=\"http://archive.ipu.org/wmn-e/classif.htm\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Inter-Parliamentary Union\n        </a>\n        .\n      </p>\n    </div>\n    <BarChart data={data} />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}